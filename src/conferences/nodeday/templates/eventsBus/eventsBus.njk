{# this mixin should be injected into layout #}

{% macro initEventsLayer(pageKey) %}
  <script type="text/javascript">
  'use strict'
const eventsBus = {
  subscribers: [],
  log: [],
  content: {},
  subscribe: function (cb, mutePrevious) {
    this.subscribers.push(cb);

    if (mutePrevious) {
      return;
    }

    const force = new Promise(resolve => {
      resolve();
    });
    force.then(() => this.log.forEach(ms => cb(ms)));
  },
  sendEvent: function (type = '', payload) {
    const message = {
      page: '{{ pageKey }}',
      type,
      payload
    };
    this.subscribers.forEach(cb => cb(message));
    this.log.push(message);
  },
  mountEvent: function (id, name) {
    this.sendEvent('mount', {
      name: name || id,
      id
    });
  },
  clickEvent: function (payload) {
    this.sendEvent('click', payload);
  },
  pushContent: function (data) {
    this.content = {
      ...this.content,
      ...data,
    }
  },
  getContent: function () {
    return this.content;
  }
};
window.eventsBus = eventsBus;  </script>
{% endmacro %}

{# mixins for using withing partials #}

{% macro mountPoint(id, name) %}
  <div id="{{ id }}" >
    <script>
      eventsBus.mountEvent("{{ id }}", "{{ name }}")
    </script>
  </div>
{% endmacro %}

{% macro openDialog(props) %}
  'eventsBus.clickEvent({ name: "{{ props.name or 'link' }}", link: "{{ props.link }}", isAuth: {{ props.isAuth | default('null') }}, data: {{ props.data if props.data else {} | dump }} })'
{% endmacro %}

{% macro sendContent(name, data) %}
  <script>
    eventsBus.pushContent({
      {{ name }}: {{ data | dump | safe }}
    })
  </script>
{% endmacro %}
