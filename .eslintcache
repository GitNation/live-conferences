{"/home/usul/FocusReactive/GitNation/NodeDay/src/js/app.js":{"size":48376,"mtime":1564154078000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/src/js/app.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0}},"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/deploy.js":{"size":871,"mtime":1552560860000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/deploy.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0}},"/home/usul/FocusReactive/GitNation/NodeDay/gulpfile.js":{"size":116,"mtime":1561053982000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulpfile.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0}},"/home/usul/FocusReactive/GitNation/NodeDay/gulp/config.js":{"size":2012,"mtime":1560291214000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulp/config.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"var util = require('gulp-util');\r\n\r\nvar production = util.env.production || util.env.prod || false;\r\nvar destPath = 'build';\r\n\r\nvar config = {\r\n  env       : 'development',\r\n  production: production,\r\n\r\n  src: {\r\n    root         : 'src',\r\n    templates    : 'src/templates',\r\n    templatesData: 'src/templates/data',\r\n    pagelist     : 'src/index.yaml',\r\n    sass         : 'src/sass',\r\n    // path for sass files that will be generated automatically via some of tasks\r\n    sassGen      : 'src/sass/generated',\r\n    js           : 'src/js',\r\n    img          : 'src/img',\r\n    pic          : 'src/pic',\r\n    svg          : 'src/img/svg',\r\n    icons        : 'src/icons',\r\n    video        : 'src/video',\r\n    // path to png sources for sprite:png task\r\n    iconsPng     : 'src/icons',\r\n    // path to svg sources for sprite:svg task\r\n    iconsSvg     : 'src/icons',\r\n    // path to svg sources for iconfont task\r\n    iconsFont    : 'src/icons',\r\n    fonts        : 'src/fonts',\r\n    lib          : 'src/lib',\r\n    data         : 'src/data'\r\n  },\r\n  dest: {\r\n    root : destPath,\r\n    html : destPath,\r\n    css  : destPath + '/css',\r\n    js   : destPath + '/js',\r\n    img  : destPath + '/img',\r\n    pic  : destPath + '/pic',\r\n    video  : destPath + '/video',\r\n    fonts: destPath + '/fonts',\r\n    lib  : destPath + '/lib',\r\n    data : destPath + '/data'\r\n  },\r\n\r\n  setEnv: function(env) {\r\n    if (typeof env !== 'string') return;\r\n    this.env = env;\r\n    this.production = env === 'production';\r\n    process.env.NODE_ENV = env;\r\n  },\r\n\r\n  logEnv: function() {\r\n    util.log(\r\n      'Environment:',\r\n      util.colors.white.bgRed(' ' + process.env.NODE_ENV + ' ')\r\n    );\r\n  },\r\n\r\n  errorHandler: require('./util/handle-errors')\r\n};\r\n\r\nconfig.setEnv(production ? 'production' : 'development');\r\n\r\nmodule.exports = config;\r\n"}},"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/copy.js":{"size":1628,"mtime":1560283356000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/copy.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"var gulp = require('gulp');\r\nvar config = require('../config.js');\r\n\r\ngulp.task('copy:fonts', function() {\r\n  return gulp\r\n    .src(config.src.fonts + '/*.{ttf,eot,woff,woff2}')\r\n    .pipe(gulp.dest(config.dest.fonts));\r\n});\r\n\r\ngulp.task('copy:data', function() {\r\n  return gulp\r\n    .src(config.src.data + '/**/*.*')\r\n    .pipe(gulp.dest(config.dest.data));\r\n});\r\n\r\ngulp.task('copy:lib', function() {\r\n  return gulp\r\n    .src(config.src.lib + '/**/*.*')\r\n    .pipe(gulp.dest(config.dest.lib));\r\n});\r\n\r\ngulp.task('copy:rootfiles', function() {\r\n  return gulp\r\n    .src(config.src.root + '/*.*')\r\n    .pipe(gulp.dest(config.dest.root));\r\n});\r\n\r\ngulp.task('copy:img', function() {\r\n  return gulp\r\n    .src([\r\n      config.src.img + '/**/*.{jpg,png,jpeg,svg,gif,ico}',\r\n      '!' + config.src.img + '/svgo/**/*.*'\r\n    ])\r\n    .pipe(gulp.dest(config.dest.img));\r\n});\r\ngulp.task('copy:pic', function() {\r\n  return gulp\r\n    .src([\r\n      config.src.pic + '/**/*.{jpg,png,jpeg,svg,gif,ico}',\r\n      '!' + config.src.pic + '/svgo/**/*.*'\r\n    ])\r\n    .pipe(gulp.dest(config.dest.pic));\r\n});\r\ngulp.task('copy:video', function() {\r\n  return gulp\r\n    .src([\r\n      config.src.video + '/*.{mp4,webm,mov}'\r\n    ])\r\n    .pipe(gulp.dest(config.dest.video));\r\n});\r\n\r\ngulp.task('copy', [\r\n  'copy:img',\r\n  'copy:pic',\r\n  'copy:video',\r\n  'copy:rootfiles',\r\n  // 'copy:lib',\r\n  // 'copy:data',\r\n  'copy:fonts'\r\n]);\r\ngulp.task('copy:watch', function() {\r\n  gulp.watch(config.src.img + '/*', ['copy']);\r\n});\r\n"}},"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/server.js":{"size":1161,"mtime":1552560860000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/server.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"var gulp   = require('gulp');\r\nvar server = require('browser-sync').create();\r\nvar util   = require('gulp-util');\r\nvar config = require('../config');\r\n\r\n// in CL 'gulp server --open' to open current project in browser\r\n// in CL 'gulp server --tunnel siteName' to make project available over http://siteName.localtunnel.me\r\n\r\ngulp.task('server', function() {\r\n  server.init({\r\n    server: {\r\n      baseDir: !config.production ? [config.dest.root, config.src.root] : config.dest.root,\r\n      directory: false,\r\n      serveStaticOptions: {\r\n        extensions: ['html']\r\n      }\r\n    },\r\n    files: [\r\n      config.dest.html + '/*.html',\r\n      config.dest.css + '/*.css',\r\n      config.dest.img + '/**/*'\r\n    ],\r\n    port: util.env.port || 8080,\r\n    logLevel: 'info', // 'debug', 'info', 'silent', 'warn'\r\n    logConnections: false,\r\n    logFileChanges: true,\r\n    open: Boolean(util.env.open),\r\n    notify: false,\r\n    ghostMode: false,\r\n    online: Boolean(util.env.tunnel),\r\n    tunnel: util.env.tunnel || null\r\n  });\r\n});\r\n\r\nmodule.exports = server;\r\n"}},"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/svgo.js":{"size":861,"mtime":1552560860000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/svgo.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"var gulp     = require('gulp');\r\nvar svgmin   = require('gulp-svgmin');\r\nvar changed  = require('gulp-changed');\r\nvar plumber  = require('gulp-plumber');\r\nvar config   = require('../config');\r\n\r\ngulp.task('svgo', function() {\r\n  return gulp\r\n    .src(config.src.img + '/svgo/**/*.svg')\r\n    .pipe(plumber({\r\n      errorHandler: config.errorHandler\r\n    }))\r\n    .pipe(changed(config.dest.img))\r\n    .pipe(svgmin({\r\n      js2svg: {\r\n        pretty: true\r\n      },\r\n      plugins: [{\r\n        removeDesc: true\r\n      }, {\r\n        cleanupIDs: true\r\n      }, {\r\n        mergePaths: false\r\n      }]\r\n    }))\r\n    .pipe(gulp.dest(config.dest.img));\r\n});\r\n\r\ngulp.task('svgo:watch', function() {\r\n  gulp.watch(config.src.img + '/svgo/**/*.svg', ['svgo']);\r\n});\r\n"}},"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/webpack.js":{"size":1169,"mtime":1552560860000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulp/tasks/webpack.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"var gulp          = require('gulp');\r\nvar webpack       = require('webpack');\r\nvar gutil         = require('gulp-util');\r\nvar notify        = require('gulp-notify');\r\nvar server        = require('./server');\r\nvar config        = require('../config');\r\nvar webpackConfig = require('../../webpack.config').createConfig;\r\n\r\nfunction handler(err, stats, cb) {\r\n  var errors = stats.compilation.errors;\r\n\r\n  if (err) throw new gutil.PluginError('webpack', err);\r\n\r\n  if (errors.length > 0) {\r\n    notify.onError({\r\n      title: 'Webpack Error',\r\n      message: '<%= error.message %>',\r\n      sound: 'Submarine'\r\n    }).call(null, errors[0]);\r\n  }\r\n\r\n  gutil.log('[webpack]', stats.toString({\r\n    colors: true,\r\n    chunks: false\r\n  }));\r\n\r\n  server.reload();\r\n  if (typeof cb === 'function') cb();\r\n}\r\n\r\ngulp.task('webpack', function(cb) {\r\n  webpack(webpackConfig(config.env)).run(function(err, stats) {\r\n    handler(err, stats, cb);\r\n  });\r\n});\r\n\r\ngulp.task('webpack:watch', function() {\r\n  webpack(webpackConfig(config.env)).watch({\r\n    aggregateTimeout: 100,\r\n    poll: false\r\n  }, handler);\r\n});\r\n"}},"/home/usul/FocusReactive/GitNation/NodeDay/gulp/util/handle-errors.js":{"size":305,"mtime":1552560860000,"hashOfConfig":"435ng5","results":{"filePath":"/home/usul/FocusReactive/GitNation/NodeDay/gulp/util/handle-errors.js","messages":[],"errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"output":"var notify = require('gulp-notify');\r\n\r\nmodule.exports = function() {\r\n  var args = Array.prototype.slice.call(arguments);\r\n  notify.onError({\r\n    title: 'Compile Error',\r\n    message: '<%= error.message %>',\r\n    sound: 'Submarine'\r\n  }).apply(this, args);\r\n  this.emit('end');\r\n};\r\n"}}}